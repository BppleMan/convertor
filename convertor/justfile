#!/usr/bin/env just --justfile

set shell := ["zsh", "-uc"]

prepare:
    cargo install cargo-zigbuild
    brew install zig

#╭──────────────────────────────────────────────╮
#│                   release                    │
#╰──────────────────────────────────────────────╯

install:
    cargo install --bin convertor --path .

release:
    cargo build --release --bin convertor

publish:
    cargo publish -p convertor
    cargo publish -p convd
    cargo publish -p confly

#╭──────────────────────────────────────────────╮
#│                    build                     │
#╰──────────────────────────────────────────────╯

all:
    time cargo build --workspace --all-targets

build-convd profile="dev":
    just dashboard {{ profile }}
    time cargo build --bin convd --profile {{ profile }}

build-confly profile="dev":
    time cargo build --bin confly

#╭──────────────────────────────────────────────╮
#│                     test                     │
#╰──────────────────────────────────────────────╯

test-convertor:
    cargo insta test -p convertor --features=testkit

test-convd:
    cargo insta test -p convd

test-confly:
    cargo insta test -p confly

#╭──────────────────────────────────────────────╮
#│                    linux                     │
#╰──────────────────────────────────────────────╯

linux:
    time CARGO_TARGET_X86_64_UNKNOWN_LINUX_GNU_LINKER=x86_64-linux-gnu-gcc \
    cargo build --release --bin convd --target x86_64-unknown-linux-gnu

musl profile="dev":
    just dashboard {{ profile }}
    time cargo zigbuild --profile {{ profile }} --bin convd --target x86_64-unknown-linux-musl

cross:
    time cross build --release --bin convd --target x86_64-unknown-linux-gnu

#╭──────────────────────────────────────────────╮
#│                    docker                    │
#╰──────────────────────────────────────────────╯

TARGET := "x86_64-unknown-linux-musl"
BIN := "convertor"
CONTAINER_NAME := "convertor-dev"

# 1) 打本地镜像（只打包宿主构建产物）
image PROFILE="release":
    docker build -f docker-service/Dockerfile \
      --build-arg TARGET_TRIPLE={{ TARGET }} \
      --build-arg PROFILE={{ PROFILE }} \
      --build-arg BIN_NAME={{ BIN }} \
      --build-arg BIN_PATH=target/{{ TARGET }}/{{ PROFILE }}/{{ BIN }} \
      --build-arg VERSION=dev-`date +%Y%m%d%H%M%S` \
      -t local/{{ BIN }}:dev .

#╭──────────────────────────────────────────────╮
#│                  dashboard                   │
#╰──────────────────────────────────────────────╯

dashboard profile="dev":
    cd dashboard && pnpm i && ng build --configuration development